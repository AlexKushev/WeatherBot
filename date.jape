Imports: {
  import java.util.*;
  import java.text.*;
  import java.time.DayOfWeek;
  import java.time.Month;
}

Phase: ConvertToDate
Input: Date
Options: control = appelt

Rule: ConvertDate
(
 {Date}
):match
-->
{
 gate.FeatureMap features = Factory.newFeatureMap();
 gate.AnnotationSet dateSet = (gate.AnnotationSet) bindings.get("match");
 gate.Annotation dateAnn = (gate.Annotation) dateSet.iterator().next(); 

 String rule = (String) dateAnn.getFeatures().get("rule");
 Date date = null; 

 if (rule.equals("GazDate")) {
   Calendar calendar = Calendar.getInstance();
    

  String dayOfWeekToday = gate.Utils.stringFor(doc, dateAnn);  
  int dayCode;
  if (dayOfWeekToday.toUpperCase().equals(DayOfWeek.SUNDAY)) {
   System.out.println("blblqlbqlbq"); 
   dayCode = 1;
  } else {
    dayCode = DayOfWeek.valueOf(dayOfWeekToday.toUpperCase()).getValue() + 1;
  }

  while (calendar.get(Calendar.DAY_OF_WEEK) != dayCode){
   	calendar.add(Calendar.DATE, 1);
   }

   date = calendar.getTime();
 } else if (rule.equals("GazDateWords")) {
   String dateWord = gate.Utils.stringFor(doc, dateAnn);
   
   if (dateWord.equals("today")) {
    date = new Date(); 
   } else if (dateWord.equals("tomorrow")) {
    Calendar calendar = Calendar.getInstance();
    calendar.add(Calendar.DATE, 1);
    date = calendar.getTime();  
   }
 } else {
   String dateName = gate.Utils.stringFor(doc, dateAnn);
   String[] dateParts = dateName.split(" ");
   int day = Integer.parseInt(dateParts[0].substring(0, dateParts[0].length() - 2));
   String monthStr = dateParts[1];
   int month = Month.valueOf(monthStr.toUpperCase()).getValue();
   String dateStr = "2017-" + month + "-" + day;

   try {
     date = new SimpleDateFormat("yyyy-MM-dd").parse(dateStr);
   } catch (ParseException e) {
      
   }
 }
 
 SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd"); 

 features.put("date", simpleDateFormat.format(date));
 features.put("rule", "ConvertDate");
 doc.getAnnotations().add(dateSet.firstNode(), dateSet.lastNode(), "ConvertDate", features);
}
